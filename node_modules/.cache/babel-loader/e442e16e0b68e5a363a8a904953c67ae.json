{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; //Action \n\nexport const fetchUserDetails = createAsyncThunk(\"fetchUser\", async () => {\n  const url = 'https://dummyjson.com/users/';\n  const response = await fetch(url);\n  return response.json();\n});\nconst viewDetails = createSlice({\n  name: 'viewDetails',\n  initialState: {\n    isLoading: false,\n    firstTime: true,\n    data: [],\n    currentUser: null,\n    isError: false\n  },\n  reducers: {\n    setData(state, action) {\n      state.currentUser = action.payload;\n    },\n\n    addUser(state, action) {\n      var _state$data;\n\n      state.firstTime = false;\n      (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.push(action.payload);\n    },\n\n    deleteUser(state, action) {\n      state.data = state.data.filter(user => {\n        if (user.id !== action.payload) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUserDetails.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUserDetails.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.data = action.payload['users'];\n    });\n    builder.addCase(fetchUserDetails.rejected, (state, action) => {\n      state.isError = true;\n      console.log('Error', action.payload);\n    });\n  }\n});\nexport const {\n  setData,\n  deleteUser,\n  addUser\n} = viewDetails.actions;\nexport default viewDetails.reducer;","map":{"version":3,"sources":["C:/Users/swarnima.mazumdar/Desktop/Contact-app/src/redux/slices/viewDetails.js"],"names":["createSlice","createAsyncThunk","fetchUserDetails","url","response","fetch","json","viewDetails","name","initialState","isLoading","firstTime","data","currentUser","isError","reducers","setData","state","action","payload","addUser","push","deleteUser","filter","user","id","extraReducers","builder","addCase","pending","fulfilled","rejected","console","log","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C,C,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGD,gBAAgB,CAAC,WAAD,EAAa,YAAS;AAClE,QAAME,GAAG,GAAG,8BAAZ;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,SAAOC,QAAQ,CAACE,IAAT,EAAP;AACH,CAJ+C,CAAzC;AAMP,MAAMC,WAAW,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAC,aADuB;AAE5BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,SAAS,EAAC,KADD;AAETC,IAAAA,SAAS,EAAC,IAFD;AAGTC,IAAAA,IAAI,EAAC,EAHI;AAITC,IAAAA,WAAW,EAAC,IAJH;AAKTC,IAAAA,OAAO,EAAC;AALC,GAFe;AAS5BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,CAACC,KAAD,EAAOC,MAAP,EAAc;AACjBD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACH,KAHI;;AAILC,IAAAA,OAAO,CAACH,KAAD,EAAOC,MAAP,EAAc;AAAA;;AACjBD,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACA,qBAAAM,KAAK,CAACL,IAAN,4DAAYS,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;AACH,KAPI;;AAQLG,IAAAA,UAAU,CAACL,KAAD,EAAOC,MAAP,EAAc;AACpBD,MAAAA,KAAK,CAACL,IAAN,GAAaK,KAAK,CAACL,IAAN,CAAWW,MAAX,CAAmBC,IAAD,IAAQ;AACnC,YAAGA,IAAI,CAACC,EAAL,KAAUP,MAAM,CAACC,OAApB,EAA4B;AACxB,iBAAO,IAAP;AACH,SAFD,MAGI;AACA,iBAAO,KAAP;AACH;AACJ,OAPY,CAAb;AAQH;;AAjBI,GATmB;AA6B5BO,EAAAA,aAAa,EAAEC,OAAD,IAAW;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgB1B,gBAAgB,CAAC2B,OAAjC,EAAyC,CAACZ,KAAD,EAAOC,MAAP,KAAgB;AACrDD,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACH,KAFD;AAGAiB,IAAAA,OAAO,CAACC,OAAR,CAAgB1B,gBAAgB,CAAC4B,SAAjC,EAA2C,CAACb,KAAD,EAAOC,MAAP,KAAgB;AACvDD,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAAP,CAAe,OAAf,CAAb;AACH,KAHD;AAIAQ,IAAAA,OAAO,CAACC,OAAR,CAAgB1B,gBAAgB,CAAC6B,QAAjC,EAA0C,CAACd,KAAD,EAAOC,MAAP,KAAgB;AACtDD,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBf,MAAM,CAACC,OAA3B;AACH,KAHD;AAIH;AAzC2B,CAAD,CAA/B;AA2CA,OAAO,MAAM;AAACH,EAAAA,OAAD;AAASM,EAAAA,UAAT;AAAoBF,EAAAA;AAApB,IAA+Bb,WAAW,CAAC2B,OAAjD;AACP,eAAe3B,WAAW,CAAC4B,OAA3B","sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n//Action \r\nexport const fetchUserDetails = createAsyncThunk(\"fetchUser\",async()=>{\r\n    const url = 'https://dummyjson.com/users/'\r\n    const response = await fetch(url)\r\n    return response.json()\r\n})\r\n\r\nconst viewDetails = createSlice({\r\n    name:'viewDetails',\r\n    initialState:{\r\n        isLoading:false,\r\n        firstTime:true,\r\n        data:[],\r\n        currentUser:null,\r\n        isError:false\r\n    },\r\n    reducers:{\r\n        setData(state,action){\r\n            state.currentUser = action.payload\r\n        },\r\n        addUser(state,action){\r\n            state.firstTime = false\r\n            state.data?.push(action.payload)\r\n        },\r\n        deleteUser(state,action){\r\n            state.data = state.data.filter((user)=>{\r\n                if(user.id!==action.payload){\r\n                    return true\r\n                }\r\n                else{\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        \r\n    },\r\n    extraReducers:(builder)=>{\r\n        builder.addCase(fetchUserDetails.pending,(state,action)=>{\r\n            state.isLoading = true;\r\n        })\r\n        builder.addCase(fetchUserDetails.fulfilled,(state,action)=>{\r\n            state.isLoading = false;\r\n            state.data = action.payload['users']\r\n        })\r\n        builder.addCase(fetchUserDetails.rejected,(state,action)=>{\r\n            state.isError = true;\r\n            console.log('Error',action.payload)\r\n        })\r\n    }\r\n})\r\nexport const {setData,deleteUser,addUser} = viewDetails.actions\r\nexport default viewDetails.reducer"]},"metadata":{},"sourceType":"module"}