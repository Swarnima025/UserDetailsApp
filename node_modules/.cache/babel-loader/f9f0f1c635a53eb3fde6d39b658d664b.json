{"ast":null,"code":"const flatten = require('lodash/flatten');\n\nconst flattenDeep = require('lodash/flattenDeep');\n\nconst isPlainObject = require('lodash/isPlainObject');\n\nconst uniq = require('lodash/uniq');\n\nconst uniqWith = require('lodash/uniqWith');\n\nconst without = require('lodash/without');\n\nfunction deleteUndefinedProps(returnObject) {\n  // cleanup empty\n  for (const prop in returnObject) {\n    if (has(returnObject, prop) && isEmptySchema(returnObject[prop])) {\n      delete returnObject[prop];\n    }\n  }\n\n  return returnObject;\n}\n\nconst allUniqueKeys = arr => uniq(flattenDeep(arr.map(keys)));\n\nconst getValues = (schemas, key) => schemas.map(schema => schema && schema[key]);\n\nconst has = (obj, propName) => Object.prototype.hasOwnProperty.call(obj, propName);\n\nconst keys = obj => {\n  if (isPlainObject(obj) || Array.isArray(obj)) {\n    return Object.keys(obj);\n  } else {\n    return [];\n  }\n};\n\nconst notUndefined = val => val !== undefined;\n\nconst isSchema = val => isPlainObject(val) || val === true || val === false;\n\nconst isEmptySchema = obj => !keys(obj).length && obj !== false && obj !== true;\n\nconst withoutArr = function (arr) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  return without.apply(null, [arr].concat(flatten(rest)));\n};\n\nmodule.exports = {\n  allUniqueKeys,\n  deleteUndefinedProps,\n  getValues,\n  has,\n  isEmptySchema,\n  isSchema,\n  keys,\n  notUndefined,\n  uniqWith,\n  withoutArr\n};","map":{"version":3,"sources":["C:/Users/swarnima.mazumdar/Desktop/Contact-app/node_modules/json-schema-merge-allof/src/common.js"],"names":["flatten","require","flattenDeep","isPlainObject","uniq","uniqWith","without","deleteUndefinedProps","returnObject","prop","has","isEmptySchema","allUniqueKeys","arr","map","keys","getValues","schemas","key","schema","obj","propName","Object","prototype","hasOwnProperty","call","Array","isArray","notUndefined","val","undefined","isSchema","length","withoutArr","rest","apply","concat","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,sBAAD,CAA7B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,aAAD,CAApB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,iBAAD,CAAxB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,gBAAD,CAAvB;;AAEA,SAASM,oBAAT,CAA8BC,YAA9B,EAA4C;AAC1C;AACA,OAAK,MAAMC,IAAX,IAAmBD,YAAnB,EAAiC;AAC/B,QAAIE,GAAG,CAACF,YAAD,EAAeC,IAAf,CAAH,IAA2BE,aAAa,CAACH,YAAY,CAACC,IAAD,CAAb,CAA5C,EAAkE;AAChE,aAAOD,YAAY,CAACC,IAAD,CAAnB;AACD;AACF;;AACD,SAAOD,YAAP;AACD;;AAED,MAAMI,aAAa,GAAIC,GAAD,IAAST,IAAI,CAACF,WAAW,CAACW,GAAG,CAACC,GAAJ,CAAQC,IAAR,CAAD,CAAZ,CAAnC;;AACA,MAAMC,SAAS,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkBD,OAAO,CAACH,GAAR,CAAYK,MAAM,IAAIA,MAAM,IAAIA,MAAM,CAACD,GAAD,CAAtC,CAApC;;AACA,MAAMR,GAAG,GAAG,CAACU,GAAD,EAAMC,QAAN,KAAmBC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,QAA1C,CAA/B;;AACA,MAAMN,IAAI,GAAGK,GAAG,IAAI;AAClB,MAAIjB,aAAa,CAACiB,GAAD,CAAb,IAAsBM,KAAK,CAACC,OAAN,CAAcP,GAAd,CAA1B,EAA8C;AAC5C,WAAOE,MAAM,CAACP,IAAP,CAAYK,GAAZ,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAND;;AAQA,MAAMQ,YAAY,GAAIC,GAAD,IAASA,GAAG,KAAKC,SAAtC;;AACA,MAAMC,QAAQ,GAAIF,GAAD,IAAS1B,aAAa,CAAC0B,GAAD,CAAb,IAAsBA,GAAG,KAAK,IAA9B,IAAsCA,GAAG,KAAK,KAAxE;;AACA,MAAMlB,aAAa,GAAIS,GAAD,IAAU,CAACL,IAAI,CAACK,GAAD,CAAJ,CAAUY,MAAZ,IAAuBZ,GAAG,KAAK,KAA/B,IAAwCA,GAAG,KAAK,IAA/E;;AACA,MAAMa,UAAU,GAAG,UAACpB,GAAD;AAAA,oCAASqB,IAAT;AAASA,IAAAA,IAAT;AAAA;;AAAA,SAAkB5B,OAAO,CAAC6B,KAAR,CAAc,IAAd,EAAoB,CAACtB,GAAD,EAAMuB,MAAN,CAAapC,OAAO,CAACkC,IAAD,CAApB,CAApB,CAAlB;AAAA,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACf1B,EAAAA,aADe;AAEfL,EAAAA,oBAFe;AAGfS,EAAAA,SAHe;AAIfN,EAAAA,GAJe;AAKfC,EAAAA,aALe;AAMfoB,EAAAA,QANe;AAOfhB,EAAAA,IAPe;AAQfa,EAAAA,YARe;AASfvB,EAAAA,QATe;AAUf4B,EAAAA;AAVe,CAAjB","sourcesContent":["const flatten = require('lodash/flatten')\nconst flattenDeep = require('lodash/flattenDeep')\nconst isPlainObject = require('lodash/isPlainObject')\nconst uniq = require('lodash/uniq')\nconst uniqWith = require('lodash/uniqWith')\nconst without = require('lodash/without')\n\nfunction deleteUndefinedProps(returnObject) {\n  // cleanup empty\n  for (const prop in returnObject) {\n    if (has(returnObject, prop) && isEmptySchema(returnObject[prop])) {\n      delete returnObject[prop]\n    }\n  }\n  return returnObject\n}\n\nconst allUniqueKeys = (arr) => uniq(flattenDeep(arr.map(keys)))\nconst getValues = (schemas, key) => schemas.map(schema => schema && schema[key])\nconst has = (obj, propName) => Object.prototype.hasOwnProperty.call(obj, propName)\nconst keys = obj => {\n  if (isPlainObject(obj) || Array.isArray(obj)) {\n    return Object.keys(obj)\n  } else {\n    return []\n  }\n}\n\nconst notUndefined = (val) => val !== undefined\nconst isSchema = (val) => isPlainObject(val) || val === true || val === false\nconst isEmptySchema = (obj) => (!keys(obj).length) && obj !== false && obj !== true\nconst withoutArr = (arr, ...rest) => without.apply(null, [arr].concat(flatten(rest)))\n\nmodule.exports = {\n  allUniqueKeys,\n  deleteUndefinedProps,\n  getValues,\n  has,\n  isEmptySchema,\n  isSchema,\n  keys,\n  notUndefined,\n  uniqWith,\n  withoutArr\n}\n"]},"metadata":{},"sourceType":"script"}