{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swarnima.mazumdar\\\\Desktop\\\\Contact-app\\\\src\\\\components\\\\ListContacts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { setData, fetchUserDetails, deleteUser } from '../redux/slices/viewDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContacts = () => {\n  _s();\n\n  var _listContacts$data;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const listContacts = useSelector(state => state.viewDetails);\n  const [toggle, setToggle] = useState(false);\n  const [currentUser, setCurrentUser] = useState(0);\n  const [contacts, setContacts] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  const userList = query === \"\" ? contacts : contacts.filter(c => c.name.toLowerCase().includes(query.toLowerCase()));\n\n  const clearQuery = () => {\n    updateQuery(\"\");\n  };\n\n  useEffect(() => {\n    console.log('hellopp');\n\n    if (listContacts.firstTime) {\n      dispatch(fetchUserDetails());\n    }\n  }, []);\n\n  const handleClick = userId => {\n    setToggle(!toggle);\n    setCurrentUser(userId);\n  };\n\n  const dispatchUser = userData => {\n    dispatch(setData(userData));\n    navigate(`/viewDetails/userId=${userData.id}`);\n  };\n\n  const handleDelete = userId => {\n    dispatch(deleteUser(userId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-contacts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-contacts-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-contacts\",\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: query,\n        onChange: e => updateQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        className: \"add-contact\",\n        children: \"Add Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), userList.length !== contacts.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showing-contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Now Showing \", userList.length, \" of \", contacts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-all\",\n        onClick: () => clearQuery(),\n        children: \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: listContacts === null || listContacts === void 0 ? void 0 : (_listContacts$data = listContacts.data) === null || _listContacts$data === void 0 ? void 0 : _listContacts$data.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"contact-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          onClick: () => {\n            handleClick(user.id);\n          },\n          children: [user.firstName, user.lastName, user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pop-btn\",\n            onClick: () => {\n              dispatchUser(user);\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"contact-remove\",\n            onClick: () => {\n              handleDelete(user.id);\n            },\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListContacts, \"EDexaCCKmur2evfHnrFIcobCfJE=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = ListContacts;\nexport default ListContacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListContacts\");","map":{"version":3,"sources":["C:/Users/swarnima.mazumdar/Desktop/Contact-app/src/components/ListContacts.js"],"names":["useState","useEffect","useSelector","useDispatch","Link","useNavigate","setData","fetchUserDetails","deleteUser","ListContacts","dispatch","navigate","listContacts","state","viewDetails","toggle","setToggle","currentUser","setCurrentUser","contacts","setContacts","query","setQuery","updateQuery","trim","userList","filter","c","name","toLowerCase","includes","clearQuery","console","log","firstTime","handleClick","userId","dispatchUser","userData","id","handleDelete","e","target","value","length","data","map","user","firstName","lastName","phone"],"mappings":";;;AAEA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,IAAR,EAAaC,WAAb,QAA+B,kBAA/B;AACA,SAASC,OAAT,EAAiBC,gBAAjB,EAAkCC,UAAlC,QAAoD,6BAApD;;;AACA,MAAMC,YAAY,GAAG,MAAO;AAAA;;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGV,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACC,WAAhB,CAAhC;AACC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACiB,WAAD,EAAaC,cAAb,IAA+BlB,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACmB,QAAD,EAAUC,WAAV,IAAyBpB,QAAQ,CAAC,EAAD,CAAvC;AACE,QAAM,CAACqB,KAAD,EAAOC,QAAP,IAAmBtB,QAAQ,CAAC,EAAD,CAAjC;;AACH,QAAMuB,WAAW,GAAGF,KAAD,IAAS;AACxBC,IAAAA,QAAQ,CAACD,KAAK,CAACG,IAAN,EAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,QAAQ,GAAGJ,KAAK,KAAI,EAAT,GAAcF,QAAd,GAAyBA,QAAQ,CAACO,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BT,KAAK,CAACQ,WAAN,EAA9B,CAAvB,CAA1C;;AACA,QAAME,UAAU,GAAG,MAAM;AACvBR,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD;;AAGAtB,EAAAA,SAAS,CAAC,MAAI;AACZ+B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAGrB,YAAY,CAACsB,SAAhB,EAA0B;AAC1BxB,MAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACC;AACJ,GALU,EAKT,EALS,CAAT;;AAMF,QAAM4B,WAAW,GAAIC,MAAD,IAAU;AAC5BpB,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,cAAc,CAACkB,MAAD,CAAd;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAIC,QAAD,IAAY;AAC/B5B,IAAAA,QAAQ,CAACJ,OAAO,CAACgC,QAAD,CAAR,CAAR;AACA3B,IAAAA,QAAQ,CAAE,uBAAsB2B,QAAQ,CAACC,EAAG,EAApC,CAAR;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAIJ,MAAD,IAAU;AAC7B1B,IAAAA,QAAQ,CAACF,UAAU,CAAC4B,MAAD,CAAX,CAAR;AACD,GAFD;;AAGI,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,WAAW,EAAC,iBAA3D;AAA6E,QAAA,KAAK,EAAEf,KAApF;AACA,QAAA,QAAQ,EAAIoB,CAAD,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,cADF,eAGQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQIlB,QAAQ,CAACmB,MAAT,KAAoBzB,QAAQ,CAACyB,MAA7B,iBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,mCAAmBnB,QAAQ,CAACmB,MAA5B,UAAwCzB,QAAQ,CAACyB,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,MAAKb,UAAU,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATN,eAeF;AAAA,gBACCnB,YADD,aACCA,YADD,6CACCA,YAAY,CAAEiC,IADf,uDACC,mBAAoBC,GAApB,CAAyBC,IAAD,iBACzB;AAAkB,QAAA,SAAS,EAAC,mBAA5B;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAE,MAAI;AAACZ,YAAAA,WAAW,CAACY,IAAI,CAACR,EAAN,CAAX;AAAqB,WAA9D;AAAA,qBACgBQ,IAAI,CAACC,SADrB,EAGgBD,IAAI,CAACE,QAHrB,EAKgBF,IAAI,CAACG,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAQkB;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACA;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAE,MAAI;AAACb,cAAAA,YAAY,CAACU,IAAD,CAAZ;AAAmB,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAE,MAAI;AAACP,cAAAA,YAAY,CAACO,IAAI,CAACR,EAAN,CAAZ;AAAsB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARlB;AAAA,SAASQ,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,cADC;AADD;AAAA;AAAA;AAAA;AAAA,YAfE;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAyCH,CAzED;;GAAM9B,Y;UACaN,W,EACAE,W,EACIH,W;;;KAHjBO,Y;AA4EN,eAAeA,YAAf","sourcesContent":["\r\n\r\nimport { useState,useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {Link,useNavigate} from 'react-router-dom';\r\nimport { setData,fetchUserDetails,deleteUser } from '../redux/slices/viewDetails';\r\nconst ListContacts = () =>  {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const listContacts = useSelector((state)=>state.viewDetails)\r\n   const [toggle,setToggle] = useState(false)\r\n   const [currentUser,setCurrentUser] = useState(0)\r\n   const [contacts,setContacts] = useState([])\r\n     const [query,setQuery] = useState(\"\");\r\n  const updateQuery =(query)=>{\r\n      setQuery(query.trim());\r\n  }\r\n  const userList = query=== \"\" ? contacts : contacts.filter((c) => c.name.toLowerCase().includes(query.toLowerCase()));\r\n  const clearQuery = () => {\r\n    updateQuery(\"\");\r\n  }\r\n  useEffect(()=>{\r\n    console.log('hellopp')\r\n    if(listContacts.firstTime){\r\n    dispatch(fetchUserDetails())\r\n    }\r\n},[])\r\nconst handleClick = (userId)=>{\r\n  setToggle(!toggle)\r\n  setCurrentUser(userId)\r\n}\r\nconst dispatchUser = (userData)=>{\r\n  dispatch(setData(userData))\r\n  navigate(`/viewDetails/userId=${userData.id}`)\r\n}\r\nconst handleDelete = (userId)=>{\r\n  dispatch(deleteUser(userId))\r\n}\r\n    return(\r\n    <div className='list-contacts'>\r\n      <div className='list-contacts-top'>\r\n        <input className='search-contacts' type=\"text\" placeholder='Search Contacts' value={query}\r\n        onChange ={(e)=>updateQuery(e.target.value)} />\r\n              <Link to=\"/create\" className=\"add-contact\">Add Contacts</Link>\r\n\r\n      </div>\r\n      {\r\n        userList.length !== contacts.length && (\r\n          <div className='showing-contacts'>\r\n            <span>Now Showing {userList.length} of {contacts.length}</span>\r\n            <button className='show-all' onClick={()=> clearQuery()}>Show All</button>\r\n          </div>\r\n        )\r\n      }\r\n  <ol>\r\n  {listContacts?.data?.map((user) => \r\n  <li key={user.id} className=\"contact-list-item\">\r\n     <div className='list-item' onClick={()=>{handleClick(user.id)}}>\r\n                    {user.firstName}\r\n\r\n                    {user.lastName}\r\n                \r\n                    {user.phone}\r\n</div>\r\n                    <div className='user-details'>\r\n                    <button className=\"pop-btn\" onClick={()=>{dispatchUser(user)}}>\r\n                        View Details\r\n                    </button>\r\n                    <button className=\"contact-remove\" onClick={()=>{handleDelete(user.id)}}>\r\n                        Delete User\r\n                    </button>\r\n                  </div>\r\n            </li>\r\n            )}\r\n\r\n\r\n    </ol>\r\n   </div>\r\n  )\r\n} \r\n\r\n\r\nexport default ListContacts;"]},"metadata":{},"sourceType":"module"}