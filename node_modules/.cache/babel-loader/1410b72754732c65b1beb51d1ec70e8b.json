{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swarnima.mazumdar\\\\Desktop\\\\Contact-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/App.css\";\nimport { useState, useEffect } from \"react\";\nimport ListContacts from \"./ListContacts\";\nimport CreateContact from \"./CreateContact\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Routes, Route, useNavigate } from \"react-router-dom\"; // import * as ContactsAPI from \"../utils/ContactsAPI\";\n\nimport { setData, fetchUserDetails, deleteUser } from '../../redux/slices/viewDetailsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.viewDetails);\n  const [toggle, setToggle] = useState(false); // const removeContact = (person) =>{\n  //   ContactsAPI.remove(person);\n  //   setContacts(contacts.filter((c)=> c.id !== person.id))\n  // }\n  // const createContact =(person)=>{\n  //   const create = async () => {\n  //     const res = await ContactsAPI.create(person);\n  //     setContacts(contacts.concat(res));\n  //   };\n  //   create();\n  //   navigate(\"/\");\n  // };\n\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    if (userList.firstTime) {\n      dispatch(fetchUserDetails());\n    }\n  }, []);\n\n  const handleClick = userId => {\n    setToggle(!toggle);\n    setContacts(userId);\n  };\n\n  const dispatchUser = userData => {\n    dispatch(setData(userData));\n    navigate(`/viewDetails/userId=${userData.id}`);\n  };\n\n  const handleDelete = userId => {\n    dispatch(deleteUser(userId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListContacts, {\n        handleDelete: handleDelete(user.id),\n        handleClick: handleClick(user.id),\n        dispatchUser: dispatchUser(user)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/create\",\n      element: /*#__PURE__*/_jsxDEV(CreateContact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/viewDetails/:id\",\n      element: /*#__PURE__*/_jsxDEV(ViewDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XJwCpGkD8WG1xiWwPPDWsWMjo6A=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/swarnima.mazumdar/Desktop/Contact-app/src/components/App.js"],"names":["useState","useEffect","ListContacts","CreateContact","useSelector","useDispatch","Routes","Route","useNavigate","setData","fetchUserDetails","deleteUser","App","navigate","dispatch","userList","state","viewDetails","toggle","setToggle","contacts","setContacts","firstTime","handleClick","userId","dispatchUser","userData","id","handleDelete","user"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,QAA0C,kBAA1C,C,CACA;;AACA,SAASC,OAAT,EAAiBC,gBAAjB,EAAkCC,UAAlC,QAAoD,qCAApD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,QAAMM,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAASA,KAAK,CAACC,WAAhB,CAA5B;AACD,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBnB,QAAQ,CAAC,KAAD,CAAnC,CAJiB,CAOhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AAEEC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGc,QAAQ,CAACO,SAAZ,EAAsB;AACpBR,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACC;AACJ,GAJQ,EAIP,EAJO,CAAT;;AAKA,QAAMa,WAAW,GAAIC,MAAD,IAAU;AAC5BL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,WAAW,CAACG,MAAD,CAAX;AACH,GAHC;;AAIF,QAAMC,YAAY,GAAIC,QAAD,IAAY;AAC7BZ,IAAAA,QAAQ,CAACL,OAAO,CAACiB,QAAD,CAAR,CAAR;AACAb,IAAAA,QAAQ,CAAE,uBAAsBa,QAAQ,CAACC,EAAG,EAApC,CAAR;AACH,GAHD;;AAIA,QAAMC,YAAY,GAAIJ,MAAD,IAAU;AAC3BV,IAAAA,QAAQ,CAACH,UAAU,CAACa,MAAD,CAAX,CAAR;AACH,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,OAAO,eAC3B,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEI,YAAY,CAACC,IAAI,CAACF,EAAN,CAAxC;AAAmD,QAAA,WAAW,EAAEJ,WAAW,CAACM,IAAI,CAACF,EAAN,CAA3E;AAAsF,QAAA,YAAY,EAAEF,YAAY,CAACI,IAAD;AAAhH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAC3B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAA+B,MAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnDD;;GAAMjB,G;UACWJ,W,EACEH,W,EACAD,W;;;KAHbQ,G;AAqDN,eAAeA,GAAf","sourcesContent":["import \"../css/App.css\";\r\nimport { useState,useEffect } from \"react\";\r\nimport ListContacts from \"./ListContacts\";\r\nimport CreateContact from \"./CreateContact\";\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { Routes, Route, useNavigate} from \"react-router-dom\";\r\n// import * as ContactsAPI from \"../utils/ContactsAPI\";\r\nimport { setData,fetchUserDetails,deleteUser } from '../../redux/slices/viewDetailsSlice'\r\n\r\nconst App = () => {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state)=>state.viewDetails)\r\n const [toggle,setToggle] = useState(false);\r\n\r\n\r\n  // const removeContact = (person) =>{\r\n  //   ContactsAPI.remove(person);\r\n  //   setContacts(contacts.filter((c)=> c.id !== person.id))\r\n  // }\r\n  // const createContact =(person)=>{\r\n  //   const create = async () => {\r\n  //     const res = await ContactsAPI.create(person);\r\n  //     setContacts(contacts.concat(res));\r\n  //   };\r\n  //   create();\r\n  //   navigate(\"/\");\r\n  // };\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  \r\n    useEffect(()=>{\r\n      if(userList.firstTime){\r\n        dispatch(fetchUserDetails())\r\n        }\r\n    },[]);\r\n    const handleClick = (userId)=>{\r\n      setToggle(!toggle)\r\n      setContacts(userId)\r\n  }\r\n  const dispatchUser = (userData)=>{\r\n      dispatch(setData(userData))\r\n      navigate(`/viewDetails/userId=${userData.id}`)\r\n  }\r\n  const handleDelete = (userId)=>{\r\n      dispatch(deleteUser(userId))\r\n  }\r\n \r\n  return(\r\n    <Routes>\r\n        <Route exact path=\"/\" element={\r\n          <ListContacts handleDelete={handleDelete(user.id)} handleClick={handleClick(user.id)} dispatchUser={dispatchUser(user)}/>\r\n        } />\r\n        <Route path=\"/create\" element={\r\n          <CreateContact />\r\n        } />\r\n     <Route path='/viewDetails/:id' element={<ViewDetails/>} />\r\n\r\n    </Routes>\r\n  )\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}