{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignDefaults = void 0;\n\nconst codegen_1 = require(\"../codegen\");\n\nconst util_1 = require(\"../util\");\n\nfunction assignDefaults(it, ty) {\n  const {\n    properties,\n    items\n  } = it.schema;\n\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default);\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i) => assignDefault(it, i, sch.default));\n  }\n}\n\nexports.assignDefaults = assignDefaults;\n\nfunction assignDefault(it, prop, defaultValue) {\n  const {\n    gen,\n    compositeRule,\n    data,\n    opts\n  } = it;\n  if (defaultValue === undefined) return;\n  const childData = (0, codegen_1._)`${data}${(0, codegen_1.getProperty)(prop)}`;\n\n  if (compositeRule) {\n    (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n    return;\n  }\n\n  let condition = (0, codegen_1._)`${childData} === undefined`;\n\n  if (opts.useDefaults === \"empty\") {\n    condition = (0, codegen_1._)`${condition} || ${childData} === null || ${childData} === \"\"`;\n  } // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n\n\n  gen.if(condition, (0, codegen_1._)`${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}","map":{"version":3,"sources":["../../../lib/compile/validate/defaults.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,SAAgB,cAAhB,CAA+B,EAA/B,EAAiD,EAAjD,EAA4D;AAC1D,QAAM;AAAC,IAAA,UAAD;AAAa,IAAA;AAAb,MAAsB,EAAE,CAAC,MAA/B;;AACA,MAAI,EAAE,KAAK,QAAP,IAAmB,UAAvB,EAAmC;AACjC,SAAK,MAAM,GAAX,IAAkB,UAAlB,EAA8B;AAC5B,MAAA,aAAa,CAAC,EAAD,EAAK,GAAL,EAAU,UAAU,CAAC,GAAD,CAAV,CAAgB,OAA1B,CAAb;AACD;AACF,GAJD,MAIO,IAAI,EAAE,KAAK,OAAP,IAAkB,KAAK,CAAC,OAAN,CAAc,KAAd,CAAtB,EAA4C;AACjD,IAAA,KAAK,CAAC,OAAN,CAAc,CAAC,GAAD,EAAM,CAAN,KAAoB,aAAa,CAAC,EAAD,EAAK,CAAL,EAAQ,GAAG,CAAC,OAAZ,CAA/C;AACD;AACF;;AATD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAWA,SAAS,aAAT,CAAuB,EAAvB,EAAyC,IAAzC,EAAgE,YAAhE,EAAqF;AACnF,QAAM;AAAC,IAAA,GAAD;AAAM,IAAA,aAAN;AAAqB,IAAA,IAArB;AAA2B,IAAA;AAA3B,MAAmC,EAAzC;AACA,MAAI,YAAY,KAAK,SAArB,EAAgC;AAChC,QAAM,SAAS,GAAG,CAAA,GAAA,SAAA,CAAA,CAAA,CAAC,GAAG,IAAI,GAAG,CAAA,GAAA,SAAA,CAAA,WAAA,EAAY,IAAZ,CAAiB,EAA9C;;AACA,MAAI,aAAJ,EAAmB;AACjB,KAAA,GAAA,MAAA,CAAA,eAAA,EAAgB,EAAhB,EAAoB,2BAA2B,SAAS,EAAxD;AACA;AACD;;AAED,MAAI,SAAS,GAAG,CAAA,GAAA,SAAA,CAAA,CAAA,CAAC,GAAG,SAAS,gBAA7B;;AACA,MAAI,IAAI,CAAC,WAAL,KAAqB,OAAzB,EAAkC;AAChC,IAAA,SAAS,GAAG,CAAA,GAAA,SAAA,CAAA,CAAA,CAAC,GAAG,SAAS,OAAO,SAAS,gBAAgB,SAAS,SAAlE;AACD,GAZkF,CAanF;AACA;;;AACA,EAAA,GAAG,CAAC,EAAJ,CAAO,SAAP,EAAkB,CAAA,GAAA,SAAA,CAAA,CAAA,CAAC,GAAG,SAAS,MAAM,CAAA,GAAA,SAAA,CAAA,SAAA,EAAU,YAAV,CAAuB,EAA5D;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map"]},"metadata":{},"sourceType":"script"}